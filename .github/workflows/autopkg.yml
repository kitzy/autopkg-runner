name: Autopkg run

on:
  watch:
    types: [started]
  # Commenting out the automated schedule so this AutoPKG build doesn't run on its own.
  # Keep this part in to run on a set schedule
  # schedule: 
    # - cron: 00 14 * * 1-5
  workflow_dispatch: # manually triggered
    inputs:
      recipe:
        description: Optional recipe to run (e.g. Google/GoogleChrome-test.jamf.recipe.yaml)
        required: false
      debug:
        description: Enable debug
        required: false
        default: 'False'
        type: choice
        options:
        - 'False'
        - 'True'

jobs:
  AutoPkg:
    runs-on: macos-latest
    timeout-minutes: 90 # Keeps your builds from running too long
    env:
      AUTOPKG_SHA256: "2ff34daf02256ad81e2c74c83a9f4c312fa2f9dd212aba59e0cef0e6ba1be5c9"
      AUTOPKG_URL: "https://github.com/autopkg/autopkg/releases/download/v2.7.2/autopkg-2.7.2.pkg"
    steps:
    - name: Checkout AutoPkg recipes
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3 Pin SHA1 hash instead of version
      with:
        fetch-depth: 1
    - name: Setup Python
      uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 #v4.7.0
      with:
        python-version: 3.11

    - name: Install Python dependencies #(remove pyyaml line if you don't use yaml recipes)
      run: |
        pip3 install --upgrade pip
        pip3 install -r requirements.txt
        pip3 install pyyaml

    - name: Install AutoPkg
      run: |
        curl -L ${{ env.AUTOPKG_URL }} --output /tmp/autopkg.pkg
        echo "${{ env.AUTOPKG_SHA256 }} */tmp/autopkg.pkg" | shasum -c
        if [[ $? != "0" ]]; then exit 1; fi
        sudo installer -pkg /tmp/autopkg.pkg -target /

    - name: Configure AutoPkg and Git
      run: |
        defaults write com.github.autopkg RECIPE_OVERRIDE_DIRS "$(pwd)"/overrides/
        defaults write com.github.autopkg FAIL_RECIPES_WITHOUT_TRUST_INFO -bool YES
        defaults write com.github.autopkg GITHUB_TOKEN "${{ secrets.GITHUB_TOKEN }}"
        defaults write com.github.autopkg YOUR_API_USERNAME_VARIABLE "${{ secrets.YOUR_GITHUB_SECRET_NAME }}"
        defaults write com.github.autopkg YOUR_API_PASSWORD_VARIABLE "${{ secrets.YOUR_GITHUB_SECRET_NAME }}"
        defaults write com.github.autopkg YOUR_URL_VARIABLE "${{ secrets.YOUR_GITHUB_SECRET_NAME }}"
        defaults write com.github.autopkg SLACK_WEBHOOK_URL "${{ secrets.YOUR_GITHUB_SECRET_NAME }}"
        git config --global user.name "runner"
        git config --global user.email "runner@githubactions.local"

    - name: Add AutoPkg repos
      run: |
        for repo in $(cat repo_list.txt); do autopkg repo-add "$repo"; done

    - name: Run AutoPkg
      run: |
        python3 autopkg_tools.py -l recipe_list.json
        if [ -f pull_request_title ]; then
        echo "TITLE=$(cat pull_request_title)" >> $GITHUB_ENV
        echo "BODY<<EOF" >> $GITHUB_ENV
        cat pull_request_body >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        fi
      env:
        RECIPE: ${{ github.event.inputs.recipe }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} #If you change this variable name above, change it here too

    - name: Create Trust Info pull request
      if: env.TITLE
      run: |
        export BRANCH_NAME=trust-info-`date +'%Y-%m-%d'`
        git checkout -b $BRANCH_NAME
        git add overrides/
        git commit -m "${{ env.TITLE }}"
        git push --set-upstream origin $BRANCH_NAME
        jq -n --arg title "${{ env.TITLE }}" \
              --arg body "$BODY" \
              --arg head "$BRANCH_NAME" \
           '{title: $title, body: $body, head: $head, "base": "${{ github.ref }}"}' | curl -s --request POST \
           --url https://api.github.com/repos/${{ github.repository }}/pulls \
           --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
           --header 'content-type: application/json' \
           -d@-